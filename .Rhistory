# Read the data
polar <-
read_csv(file = paste0("D:/Becky/",input_file_name))
name_user_id <- polar[1, 1]
activity <- polar[1, 2]
date_real <- polar[1, 3] %>%  dmy()
time_real <- polar[1, 4] %>%  hms()
start_time <- date_real + time_real
output_file_name <-
paste0(as.character(name_user_id), as.character(start_time), "-output.csv")
### Remove unwanted rows
polar_test <- polar %>% slice(-c(1:2))
### Remove Unwanted Columns
polar_test <- polar_test %>% select(c(2, 3, 4, 5))
# Rename the columns
colnames(polar_test) <- c("Time", "HR" , "Speed", "Pace")
# Change to hms type to add it to the starting date and time
polar_test$Time <- polar_test$Time %>% hms()
polar_test$Time <- polar_test$Time + start_time
polar_test <-
polar_test %>%  mutate(Activity = as.character(activity) ,
Name = as.character(name_user_id))
output_file_name <- str_replace_all(string = output_file_name, pattern = ":", replacement = "_")
write.csv(x = polar_test, file = paste0(main_path,"/", output_file_name))
})
# Here is the main folder
main_path <- "D:/Becky"
file_names <- dir(path = main_path, pattern = "*.csv")
file_names %>% purrr::map(function(input_file_name){
# Read the data
polar <-
read_csv(file = paste0("D:/Becky/",input_file_name))
name_user_id <- polar[1, 1]
activity <- polar[1, 2]
date_real <- polar[1, 3] %>%  dmy()
time_real <- polar[1, 4] %>%  hms()
start_time <- date_real + time_real
output_file_name <-
paste0(as.character(name_user_id), as.character(start_time), "-output.csv")
### Remove unwanted rows
polar_test <- polar %>% slice(-c(1:2))
### Remove Unwanted Columns
polar_test <- polar_test %>% select(c(2, 3, 4, 5))
# Rename the columns
colnames(polar_test) <- c("Time", "HR" , "Speed", "Pace")
# Change to hms type to add it to the starting date and time
polar_test$Time <- polar_test$Time %>% hms()
polar_test$Time <- polar_test$Time + start_time
polar_test <-
polar_test %>%  mutate(Activity = as.character(activity) ,
Name = as.character(name_user_id))
output_file_name <- str_replace_all(string = output_file_name, pattern = ":", replacement = "_")
write.csv(x = polar_test, file = paste0(main_path,"/", output_file_name))
})
# Here is the main folder
main_path <- "D:/Becky"
file_names <- dir(path = main_path, pattern = "*.csv")
file_names %>% purrr::map(function(input_file_name){
# Read the data
polar <-
read_csv(file = paste0("D:/Becky/",input_file_name))
name_user_id <- polar[1, 1]
activity <- polar[1, 2]
date_real <- polar[1, 3] %>%  dmy()
time_real <- polar[1, 4] %>%  hms()
start_time <- date_real + time_real
output_file_name <-
paste0(as.character(name_user_id),"_", as.character(start_time), "-output.csv")
### Remove unwanted rows
polar_test <- polar %>% slice(-c(1:2))
### Remove Unwanted Columns
polar_test <- polar_test %>% select(c(2, 3, 4, 5))
# Rename the columns
colnames(polar_test) <- c("Time", "HR" , "Speed", "Pace")
# Change to hms type to add it to the starting date and time
polar_test$Time <- polar_test$Time %>% hms()
polar_test$Time <- polar_test$Time + start_time
polar_test <-
polar_test %>%  mutate(Activity = as.character(activity) ,
Name = as.character(name_user_id))
output_file_name <- str_replace_all(string = output_file_name, pattern = ":", replacement = "_")
write.csv(x = polar_test, file = paste0(main_path,"/", output_file_name))
})
file_names <- dir(path = main_path, pattern = "*.csv")
file_names
# Here is the main folder
main_path <- "D:/Becky/"
file_names <- dir(path = main_path, pattern = "*.csv")
file_names %>% purrr::map(function(input_file_name){
# Read the data
polar <-
read_csv(file = paste0(main_path,input_file_name))
name_user_id <- polar[1, 1]
activity <- polar[1, 2]
date_real <- polar[1, 3] %>%  dmy()
time_real <- polar[1, 4] %>%  hms()
start_time <- date_real + time_real
output_file_name <-
paste0(as.character(name_user_id),"_", as.character(start_time), "-output.csv")
### Remove unwanted rows
polar_test <- polar %>% slice(-c(1:2))
### Remove Unwanted Columns
polar_test <- polar_test %>% select(c(2, 3, 4, 5))
# Rename the columns
colnames(polar_test) <- c("Time", "HR" , "Speed", "Pace")
# Change to hms type to add it to the starting date and time
polar_test$Time <- polar_test$Time %>% hms()
polar_test$Time <- polar_test$Time + start_time
polar_test <-
polar_test %>%  mutate(Activity = as.character(activity) ,
Name = as.character(name_user_id))
output_file_name <-
paste0(as.character(name_user_id),
"_",
as.character(start_time),
"-output.csv") %>%  str_replace_all(pattern = ":",
replacement = "_")
write.csv(x = polar_test,
file = paste0(main_path, output_file_name))
})
devtools::install_github("junruidi/ActFrag")
library(ActFrag)
data(example_activity_data)
force(example_activity_data)
force(example_activity_data)
view(example_activity_data)
View(example_activity_data)
data(example_activity_data)
count = example_activity_data$count
weartime = wear_flag(count.data = count, start = "06:00", end = "23:00")
View(weartime)
?wear_flag
?ActFrag::fragmentation
install.packages("Actigraphy")
?Actigraphy::fda.matchid
?activityCounts::sampleCounts
install.packages("activPAL")
activPAL::activity.summary.by.custom.period()
install.packages("activpalProcessing")
summarise
library(tidyverse)
install.packages("HMMpa")
install.packages("lifelogr")
lifelogr::Person
p <- c("ActFrag",
"Actigraphy",
"activityCounts"	,
"activPAL",
"activpalProcessing",
"cycleRtools",
"fitbitScraper"	,
"fitdc",
"GENEAclassify",
"GENEAread",
"GGIR",
"heatex",
"HMMpa",
"lifelogr",
"nparACT",
"PASenseWear",
"PAutilities",
"PhysicalActivity",
"PML",
"SwimmeR",
"trackeR",
"trackeRapp")
install.packages(p)
install.packages(p , dependencies = T)
install.packages(p, dependencies = T)
ctv::available.views()
?ctv::check_ctv_packages
help(ctv)
library(ctv)
help(ctv)
??ctv
pa <- ctv::read.ctv(file = "taskview/pa_task_view/PhysicalActivity.ctv")
pa <- ctv::read.ctv(file = "taskview/pa_task_view/PhysicalActivity.ctv")
pa <- ctv::read.ctv(file = "taskview/pa_task_view/PhysicalActivity.ctv")
?ctv::read.ctv
ctv::read.ctv(file = "taskview/pa_task_view/PhysicalActivity.ctv")
ctv::read.ctv(file = "taskview/pa_task_view/PhysicalActivity.ctv")
ctv::read.ctv(file = "taskview/pa_task_view/PhysicalActivity.ctv")
c <- ctv::read.ctv(file = "taskview/pa_task_view/PhysicalActivity.ctv")
ctv2html(c, "test.html")
setwd("~/taskview/pa_task_view")
#!/usr/bin/r
## if you do not have /usr/bin/r from littler, just use Rscript
##
## Copyright 2014 - 2017  Dirk Eddelbuettel
## Released under GPL-2 or later
ctv <- "PhysicalActivity"
ctvfile  <- paste0(ctv, ".ctv")
htmlfile <- paste0(ctv, ".html")
#mdfile   <- paste0(ctv, ".md")
mdfile   <- "README.md"
## load packages
suppressMessages(library(XML))          # called by ctv
suppressMessages(library(ctv))
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
check_ctv_packages(ctvfile)             # run the check
## create html file from ctv file
ctv2html(read.ctv(ctvfile), htmlfile)
### these look atrocious, but are pretty straight forward. read them one by one
###  - start from the htmlfile
cmd <- paste0("cat ", htmlfile,
###  - in lines of the form  ^<a href="Word">Word.html</a>
###  - capture the 'Word' and insert it into a larger URL containing an absolute reference to task view 'Word'
" | sed -e 's|^<a href=\"\\([a-zA-Z]*\\)\\.html|<a href=\"https://cran.r-project.org/web/views/\\1.html\"|' | ",
###  - call pandoc, specifying html as input and github-flavoured markdown as output
###    (use 'gfm' for pandoc 2.*, and 'markdown_github' pandoc 1.*)
"pandoc -s -r html -w gfm | ",
###  - deal with the header by removing extra ||, replacing |** with ** and **| with **:
"sed -e's/||//g' -e's/|\\*\\*/\\*\\*/g' -e's/\\*\\*|/\\*\\* /g' -e's/|$/  /g' ",
###  - remove the table: remove the '| ' vertical bar, and remove the frame line
"-e's/| //g' -e'/^|-----/d' ",
###  - make the implicit URL to packages explicit
"-e's|../packages/\\([^/]*\\)/index.html|https://cran.r-project.org/package=\\1|g' ",
"-e's|../packages/\\([^/]*\\)|https://cran.r-project.org/package=\\1|g' ",
"-e's/( \\[/(\\[/g' ",
###  - write out mdfile
"> ", mdfile)
system(cmd)                             # run the conversion
unlink(htmlfile)                        # remove temporary html file
cat("Done.\n")
#!/usr/bin/r
## if you do not have /usr/bin/r from littler, just use Rscript
##
## Copyright 2014 - 2017  Dirk Eddelbuettel
## Released under GPL-2 or later
ctv <- "PhysicalActivity"
ctvfile  <- paste0(ctv, ".ctv")
htmlfile <- paste0(ctv, ".html")
#mdfile   <- paste0(ctv, ".md")
mdfile   <- "README.md"
## load packages
suppressMessages(library(XML))          # called by ctv
suppressMessages(library(ctv))
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
check_ctv_packages(ctvfile)             # run the check
## create html file from ctv file
ctv2html(read.ctv(ctvfile), htmlfile)
### these look atrocious, but are pretty straight forward. read them one by one
###  - start from the htmlfile
cmd <- paste0("cat ", htmlfile,
###  - in lines of the form  ^<a href="Word">Word.html</a>
###  - capture the 'Word' and insert it into a larger URL containing an absolute reference to task view 'Word'
" | sed -e 's|^<a href=\"\\([a-zA-Z]*\\)\\.html|<a href=\"https://cran.r-project.org/web/views/\\1.html\"|' | ",
###  - call pandoc, specifying html as input and github-flavoured markdown as output
###    (use 'gfm' for pandoc 2.*, and 'markdown_github' pandoc 1.*)
"pandoc -s -r html -w gfm | ",
###  - deal with the header by removing extra ||, replacing |** with ** and **| with **:
"sed -e's/||//g' -e's/|\\*\\*/\\*\\*/g' -e's/\\*\\*|/\\*\\* /g' -e's/|$/  /g' ",
###  - remove the table: remove the '| ' vertical bar, and remove the frame line
"-e's/| //g' -e'/^|-----/d' ",
###  - make the implicit URL to packages explicit
"-e's|../packages/\\([^/]*\\)/index.html|https://cran.r-project.org/package=\\1|g' ",
"-e's|../packages/\\([^/]*\\)|https://cran.r-project.org/package=\\1|g' ",
"-e's/( \\[/(\\[/g' ",
###  - write out mdfile
"> ", mdfile)
system(cmd)                             # run the conversion
unlink(htmlfile)                        # remove temporary html file
cat("Done.\n")
print(cmd)
#!/usr/bin/r
## if you do not have /usr/bin/r from littler, just use Rscript
##
## Copyright 2014 - 2017  Dirk Eddelbuettel
## Released under GPL-2 or later
ctv <- "PhysicalActivity"
ctvfile  <- paste0(ctv, ".ctv")
htmlfile <- paste0(ctv, ".html")
#mdfile   <- paste0(ctv, ".md")
mdfile   <- "README.md"
## load packages
suppressMessages(library(XML))          # called by ctv
suppressMessages(library(ctv))
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
check_ctv_packages(ctvfile)             # run the check
## create html file from ctv file
ctv2html(read.ctv(ctvfile), htmlfile)
### these look atrocious, but are pretty straight forward. read them one by one
###  - start from the htmlfile
cmd <- paste0("cat ", htmlfile,
###  - in lines of the form  ^<a href="Word">Word.html</a>
###  - capture the 'Word' and insert it into a larger URL containing an absolute reference to task view 'Word'
" | sed -e 's|^<a href=\"\\([a-zA-Z]*\\)\\.html|<a href=\"https://cran.r-project.org/web/views/\\1.html\"|' | ",
###  - call pandoc, specifying html as input and github-flavoured markdown as output
###    (use 'gfm' for pandoc 2.*, and 'markdown_github' pandoc 1.*)
"pandoc -s -r html -w gfm | ",
###  - deal with the header by removing extra ||, replacing |** with ** and **| with **:
"sed -e's/||//g' -e's/|\\*\\*/\\*\\*/g' -e's/\\*\\*|/\\*\\* /g' -e's/|$/  /g' ",
###  - remove the table: remove the '| ' vertical bar, and remove the frame line
"-e's/| //g' -e'/^|-----/d' ",
###  - make the implicit URL to packages explicit
"-e's|../packages/\\([^/]*\\)/index.html|https://cran.r-project.org/package=\\1|g' ",
"-e's|../packages/\\([^/]*\\)|https://cran.r-project.org/package=\\1|g' ",
"-e's/( \\[/(\\[/g' ",
###  - write out mdfile
"> ", mdfile)
system(cmd)                             # run the conversion
ctv <- "PhysicalActivity"
ctvfile  <- paste0(ctv, ".ctv")
htmlfile <- paste0(ctv, ".html")
#mdfile   <- paste0(ctv, ".md")
mdfile   <- "README.md"
## load packages
suppressMessages(library(XML))          # called by ctv
suppressMessages(library(ctv))
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
check_ctv_packages(ctvfile)             # run the check
## create html file from ctv file
ctv2html(read.ctv(ctvfile), htmlfile)
ctv <- "PhysicalActivity"
ctvfile  <- paste0(ctv, ".ctv")
htmlfile <- paste0(ctv, ".html")
#mdfile   <- paste0(ctv, ".md")
mdfile   <- "README.md"
## load packages
suppressMessages(library(XML))          # called by ctv
suppressMessages(library(ctv))
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
check_ctv_packages(ctvfile)             # run the check
## create html file from ctv file
ctv2html(read.ctv(ctvfile), htmlfile)
#!/usr/bin/r
## if you do not have /usr/bin/r from littler, just use Rscript
##
## Copyright 2014 - 2017  Dirk Eddelbuettel
## Released under GPL-2 or later
ctv <- "PhysicalActivity"
ctvfile  <- paste0(ctv, ".ctv")
htmlfile <- paste0(ctv, ".html")
#mdfile   <- paste0(ctv, ".md")
mdfile   <- "README.md"
## load packages
suppressMessages(library(XML))          # called by ctv
suppressMessages(library(ctv))
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
check_ctv_packages(ctvfile)             # run the check
## create html file from ctv file
ctv2html(read.ctv(ctvfile), htmlfile)
### these look atrocious, but are pretty straight forward. read them one by one
###  - start from the htmlfile
cmd <- paste0("cat ", htmlfile,
###  - in lines of the form  ^<a href="Word">Word.html</a>
###  - capture the 'Word' and insert it into a larger URL containing an absolute reference to task view 'Word'
" | sed -e 's|^<a href=\"\\([a-zA-Z]*\\)\\.html|<a href=\"https://cran.r-project.org/web/views/\\1.html\"|' | ",
###  - call pandoc, specifying html as input and github-flavoured markdown as output
###    (use 'gfm' for pandoc 2.*, and 'markdown_github' pandoc 1.*)
"pandoc -s -r html -w gfm | ",
###  - deal with the header by removing extra ||, replacing |** with ** and **| with **:
"sed -e's/||//g' -e's/|\\*\\*/\\*\\*/g' -e's/\\*\\*|/\\*\\* /g' -e's/|$/  /g' ",
###  - remove the table: remove the '| ' vertical bar, and remove the frame line
"-e's/| //g' -e'/^|-----/d' ",
###  - make the implicit URL to packages explicit
"-e's|../packages/\\([^/]*\\)/index.html|https://cran.r-project.org/package=\\1|g' ",
"-e's|../packages/\\([^/]*\\)|https://cran.r-project.org/package=\\1|g' ",
"-e's/( \\[/(\\[/g' ",
###  - write out mdfile
"> ", mdfile)
system(cmd)                             # run the conversion
unlink(htmlfile)                        # remove temporary html file
cat("Done.\n")
p
p<-   ("ActFrag" ,"Actigraphy"   ,  "activityCounts"  ,  "activPAL"     ,   "activpalProcessing" ,"cycleRtools"  ,
"fitbitScraper"   ,   "fitdc"     ,         "GENEAclassify"   ,   "GENEAread"     ,    "GGIR"        ,       "heatex", "HMMpa"       ,       "lifelogr"  ,         "nparACT"      ,      "PASenseWear"    ,    "PAutilities"     ,   "PhysicalActivity"   "PML"    ,            "SwimmeR"          ,  "trackeR"         ,   "trackeRapp")
library(CTV)
library(ctv)
setwd("~/walkabilly/pa_task_view")
?ctv::repos_update_views
read.ctv("PhysicalActivity.ctv")
read.ctv("PhysicalActivity.ctv")
ctv_file <- read.ctv("PhysicalActivity.ctv")
View(ctv_file)
r <- getOption("repos")
r
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
r
check_ctv_packages(ctv_file)             # run the check
setwd("~/walkabilly/pa_task_view")
ctv_file <- read.ctv("PhysicalActivity.ctv")
html_file <- "PhysicalActivity.html"
check_ctv_packages(ctv_file)             # run the check
View(ctv_file)
ctv_file
library(ctv)
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
ctv_file <- read.ctv("PhysicalActivity.ctv")
html_file <- "PhysicalActivity.html"
check_ctv_packages(ctv_file)             # run the check
View(ctv_file)
ctv_file
library(ctv)
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
ctv_file <- read.ctv("PhysicalActivity.ctv")
html_file <- "PhysicalActivity.html"
check_ctv_packages(ctv_file)             # run the check
# --------Edited section by Javad Khataei, 11/28/2019-----------
setwd("~/taskview/pa_task_view") # windows system
setwd("~/codes/pa_task_view") # Linux system
# --------------------------------------------------------------
ctv <- "PhysicalActivity"
ctvfile  <- paste0(ctv, ".ctv")
htmlfile <- paste0(ctv, ".html")
#mdfile   <- paste0(ctv, ".md")
mdfile   <- "README.md"
## load packages
suppressMessages(library(XML))          # called by ctv
suppressMessages(library(ctv))
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
check_ctv_packages(ctvfile)             # run the check
check_ctv_packages("PhysicalActivity.ctv")             # run the check
ctv2html(ctv_file,html_file)
ctv2html(ctv_file,html_file)
read.ctv(ctvfile)
ctv <- "PhysicalActivity"
ctvfile  <- paste0(ctv, ".ctv")
htmlfile <- paste0(ctv, ".html")
#mdfile   <- paste0(ctv, ".md")
mdfile   <- "README.md"
## load packages
suppressMessages(library(XML))          # called by ctv
suppressMessages(library(ctv))
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
check_ctv_packages(ctvfile)             # run the check
read.ctv(ctvfile)
library(ctv)
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
ctv_file <- read.ctv()
html_file <- "PhysicalActivity.html"
ctv_file <- read.ctv("PhysicalActivity.ctv")
html_file <- "PhysicalActivity.html"
check_ctv_packages("PhysicalActivity.ctv")             # run the check
ctv2html(ctv_file,html_file)
ctv_file
library(ctv)
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
ctv_file <- read.ctv("PhysicalActivity.ctv")
html_file <- "PhysicalActivity.html"
check_ctv_packages("PhysicalActivity.ctv")             # run the check
ctv_file
ctv_file <- read.ctv("PhysicalActivity.ctv")
ctv_file
check_ctv_packages
library(ctv)
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
ctv_file <- read.ctv("PhysicalActivity.ctv")
html_file <- "PhysicalActivity.html"
check_ctv_packages("PhysicalActivity.ctv")             # run the check
ctv_file
r <- getOption("repos")                 # set CRAN mirror
r
library(ctv)
ctv_file <- read.ctv("PhysicalActivity.ctv")
html_file <- "PhysicalActivity.html"
ctv_file
check_ctv_packages("PhysicalActivity.ctv")             # run the check
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
ctv_file
ctv_file <- read.ctv("PhysicalActivity.ctv")
ctv_file
html_file <- "PhysicalActivity.html"
check_ctv_packages("PhysicalActivity.ctv")             # run the check
ctv2html(ctv_file,html_file)
ctv2html(ctv_file, file = html_file, reposname = "CRAN")
# test another ctv
x <- read.ctv(system.file("ctv", "Econometrics.ctv", package = "ctv"))
View(x)
x
library(ctv)
r <- getOption("repos")                 # set CRAN mirror
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
ctv_file <- read.ctv("PhysicalActivity.ctv")
html_file <- "PhysicalActivity.html"
check_ctv_packages("PhysicalActivity.ctv")             # run the check
ctv2html(ctv_file, file = html_file, reposname = "CRAN")
ctv::download.views(views = ctv_file)
ctv::download.views(views = ctv_file ,coreOnly = T)
ctv::download.views(views = x ,coreOnly = T)
ctv::available.views()
ctv::check_ctv_packages(file = x)
ctv::check_ctv_packages(file = ctv_file)
